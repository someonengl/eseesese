
import streamlit as st
import random
words = [
    "aftermath", "also-ran", "amenable", "aptitude", "askew", "aspire", "castigate", "circa",
    "comprise", "dispel", "divine", "domain", "dormant", "edifice", "egalitarian", "embellish",
    "embody", "emit", "endure", "evade", "exhume", "expunge", "facilitate", "fathom", "feign",
    "fickle", "fortuitous", "husbandry", "idiosyncrasy", "impede", "irascible", "legacy", "lieu",
    "loiter", "maim", "muse", "nepotism", "lithe", "mawkish", "frank", "diatribe", "appease",
    "camaraderie", "paragon", "ebullience", "sublime", "opaque", "serene", "batter", "bevy", "crony",
    "quaff", "quail", "bandy", "demise", "acme", "crux", "brink", "abhor", "appalling", "raze",
    "raucous", "placate", "penury", "nefarious", "morose", "intimidate", "insularity", "innocuous",
    "incongruous", "impudence", "gregarious", "garrulous", "emulate", "zealot", "deride",
    "braggart", "affable", "adversity", "elusive", "stolid", "scrutinize", "mogul", "armament",
    "prattle", "booty", "plethora", "exodus", "cascade", "skullduggery", "specter", "pinguid",
    "eloquent", "winnow", "escapade", "dolt", "adherent", "waffle", "onerous", "chide", "cranny",
    "hoard", "masticate", "laudable", "tyro", "vertigo", "supplant", "relay", "adjoining", "dispute",
    "glacial", "fowl", "prolong", "gallant", "courtesy", "lanky", "accumulate", "scenic",
    "meddlesome", "rendezvous", "refuge", "inquisitive", "stout", "prosperity", "reside", "ample",
    "unfurl", "exceptional", "mingled", "voracious", "obese", "don", "plucky", "cupidity", "curtail",
    "animosity", "respite", "garner", "annex", "arduous", "kindle", "capacious", "accolade",
    "assail", "doff", "altercation", "disparage", "petulant", "deduce", "deft", "ostracize",
    "ensemble", "engulf", "dessicate", "denounce", "abstruce", "wither", "truncate", "wane",
    "somber", "rivet", "sundry", "prowess", "plight", "permeate", "precarious", "revere", "forsake",
    "to curb", "rife", "chastise", "tantalize", "surmise", "disperse", "evince"
]

ru_correct = {
    "aftermath":"–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è","also-ran":"–Ω–µ—É–¥–∞—á–Ω–∏–∫","amenable":"–ø–æ–¥–∞—Ç–ª–∏–≤—ã–π",
    "aptitude":"—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å","askew":"–∫—Ä–∏–≤–æ","aspire":"—Å—Ç—Ä–µ–º–∏—Ç—å—Å—è","castigate":"–Ω–∞–∫–∞–∑—ã–≤–∞—Ç—å",
    "circa":"–ø—Ä–∏–º–µ—Ä–Ω–æ","comprise":"–≤–∫–ª—é—á–∞—Ç—å","dispel":"—Ä–∞–∑–≤–µ—è—Ç—å","divine":"–ø—Ä–µ–¥—É–≥–∞–¥—ã–≤–∞—Ç—å",
    "domain":"–æ–±–ª–∞—Å—Ç—å","dormant":"—Å–ø—è—â–∏–π","edifice":"–∑–¥–∞–Ω–∏–µ","egalitarian":"—É—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π",
    "embellish":"–ø—Ä–∏—É–∫—Ä–∞—à–∏–≤–∞—Ç—å","embody":"–≤–æ–ø–ª–æ—â–∞—Ç—å","emit":"–∏–∑–ª—É—á–∞—Ç—å","endure":"—Ç–µ—Ä–ø–µ—Ç—å",
    "evade":"—É–∫–ª–æ–Ω—è—Ç—å—Å—è","exhume":"–æ—Ç–∫–∞–ø—ã–≤–∞—Ç—å","expunge":"–≤—ã—á–µ—Ä–∫–∏–≤–∞—Ç—å",
    "facilitate":"–æ–±–ª–µ–≥—á–∞—Ç—å","fathom":"–ø–æ—Å—Ç–∏–≥–∞—Ç—å","feign":"–ø—Ä–∏—Ç–≤–æ—Ä—è—Ç—å—Å—è",
    "fickle":"–Ω–µ–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π","fortuitous":"—Å–ª—É—á–∞–π–Ω—ã–π","husbandry":"–∑–µ–º–ª–µ–¥–µ–ª–∏–µ",
    "idiosyncrasy":"–æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å","impede":"–ø—Ä–µ–ø—è—Ç—Å—Ç–≤–æ–≤–∞—Ç—å","irascible":"–≤—Å–ø—ã–ª—å—á–∏–≤—ã–π",
    "legacy":"–Ω–∞—Å–ª–µ–¥–∏–µ","lieu":"–º–µ—Å—Ç–æ","loiter":"—Å–ª–æ–Ω—è—Ç—å—Å—è","maim":"–∫–∞–ª–µ—á–∏—Ç—å",
    "muse":"—Ä–∞–∑–º—ã—à–ª—è—Ç—å","nepotism":"–∫—É–º–æ–≤—Å—Ç–≤–æ","lithe":"–≥–∏–±–∫–∏–π","mawkish":"—Å–ª–∞—â–∞–≤—ã–π",
    "frank":"–æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–π","diatribe":"–æ–±–ª–∏—á–µ–Ω–∏–µ","appease":"—É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—Ç—å",
    "camaraderie":"—Ç–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–æ","paragon":"–æ–±—Ä–∞–∑–µ—Ü","ebullience":"–æ–∂–∏–≤–ª–µ–Ω–∏–µ",
    "sublime":"–≤–æ–∑–≤—ã—à–µ–Ω–Ω—ã–π","opaque":"–Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π","serene":"–±–µ–∑–º—è—Ç–µ–∂–Ω—ã–π",
    "batter":"–∫–æ–ª–æ—Ç–∏—Ç—å","bevy":"–≥—Ä—É–ø–ø–∞","crony":"–¥—Ä—É–∂–æ–∫","quaff":"–ø–∏—Ç—å–∑–∞–ª–ø–æ–º",
    "quail":"—Å—Ç—Ä—É—Å–∏—Ç—å","bandy":"–æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è","demise":"–∫–æ–Ω—á–∏–Ω–∞","acme":"–ø–∏–∫","crux":"—Å—É—Ç—å",
    "brink":"–∫—Ä–∞–π","abhor":"–Ω–µ–Ω–∞–≤–∏–¥–µ—Ç—å","appalling":"—É–∂–∞—Å–∞—é—â–∏–π","raze":"—Å–Ω–æ—Å–∏—Ç—å",
    "raucous":"—Ä–µ–∑–∫–∏–π","placate":"—É—Å–ø–æ–∫–∞–∏–≤–∞—Ç—å","penury":"–Ω–∏—â–µ—Ç–∞","nefarious":"–≥–Ω—É—Å–Ω—ã–π",
    "morose":"—É–≥—Ä—é–º—ã–π","intimidate":"–∑–∞–ø—É–≥–∏–≤–∞—Ç—å","insularity":"–∑–∞–º–∫–Ω—É—Ç–æ—Å—Ç—å",
    "innocuous":"–±–µ–∑–≤—Ä–µ–¥–Ω—ã–π","incongruous":"–Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π","impudence":"–Ω–∞–≥–ª–æ—Å—Ç—å",
    "gregarious":"–æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π","garrulous":"–±–æ–ª—Ç–ª–∏–≤—ã–π","emulate":"–ø–æ–¥—Ä–∞–∂–∞—Ç—å",
    "zealot":"—Ñ–∞–Ω–∞—Ç–∏–∫","deride":"–≤—ã—Å–º–µ–∏–≤–∞—Ç—å","braggart":"—Ö–≤–∞—Å—Ç—É–Ω","affable":"–ø—Ä–∏–≤–µ—Ç–ª–∏–≤—ã–π",
    "adversity":"–Ω–µ–≤–∑–≥–æ–¥—ã","elusive":"–Ω–µ—É–ª–æ–≤–∏–º—ã–π","stolid":"—Ñ–ª–µ–≥–º–∞—Ç–∏—á–Ω—ã–π",
    "scrutinize":"–∏–∑—É—á–∞—Ç—å","mogul":"–º–∞–≥–Ω–∞—Ç","armament":"–≤–æ–æ—Ä—É–∂–µ–Ω–∏–µ","prattle":"–±–æ–ª—Ç–æ–≤–Ω—è",
    "booty":"–¥–æ–±—ã—á–∞","plethora":"–∏–∑–æ–±–∏–ª–∏–µ","exodus":"–º–∞—Å—Å–æ–≤—ã–π—É—Ö–æ–¥","cascade":"–≤–æ–¥–æ–ø–∞–¥",
    "skullduggery":"–º–∞—Ö–∏–Ω–∞—Ü–∏–∏","specter":"–ø—Ä–∏–∑—Ä–∞–∫","pinguid":"–∂–∏—Ä–Ω—ã–π","eloquent":"–∫—Ä–∞—Å–Ω–æ—Ä–µ—á–∏–≤—ã–π",
    "winnow":"–æ—Ç—Å–µ–∏–≤–∞—Ç—å","escapade":"—à–∞–ª–æ—Å—Ç—å","dolt":"–±–æ–ª–≤–∞–Ω","adherent":"—Å—Ç–æ—Ä–æ–Ω–Ω–∏–∫",
    "waffle":"–∫–æ–ª–µ–±–∞—Ç—å—Å—è","onerous":"–æ–±—Ä–µ–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π","chide":"–±—Ä–∞–Ω–∏—Ç—å","cranny":"—â–µ–ª—å",
    "hoard":"–∑–∞–ø–∞—Å–∞—Ç—å","masticate":"–∂–µ–≤–∞—Ç—å","laudable":"–ø–æ—Ö–≤–∞–ª—å–Ω—ã–π","tyro":"–Ω–æ–≤–∏—á–æ–∫",
    "vertigo":"–≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ","supplant":"–≤—ã—Ç–µ—Å–Ω—è—Ç—å","relay":"—ç—Å—Ç–∞—Ñ–µ—Ç–∞","adjoining":"—Å–º–µ–∂–Ω—ã–π",
    "dispute":"—Å–ø–æ—Ä","glacial":"–ª–µ–¥–Ω–∏–∫–æ–≤—ã–π","fowl":"–¥–æ–º–ø—Ç–∏—Ü–∞","prolong":"–ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å",
    "gallant":"—Ö—Ä–∞–±—Ä—ã–π","courtesy":"–≤–µ–∂–ª–∏–≤–æ—Å—Ç—å","lanky":"–¥–æ–ª–≥–æ–≤—è–∑—ã–π","accumulate":"–Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å",
    "scenic":"–∂–∏–≤–æ–ø–∏—Å–Ω—ã–π","meddlesome":"–Ω–∞–∑–æ–π–ª–∏–≤—ã–π","rendezvous":"–≤—Å—Ç—Ä–µ—á–∞","refuge":"—É–±–µ–∂–∏—â–µ",
    "inquisitive":"–ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π","stout":"–∫—Ä–µ–ø–∫–∏–π","prosperity":"–ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏–µ",
    "reside":"–ø—Ä–æ–∂–∏–≤–∞—Ç—å","ample":"–æ–±—à–∏—Ä–Ω—ã–π","unfurl":"—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å","exceptional":"–∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π",
    "mingled":"—Å–º–µ—à–∞–Ω–Ω—ã–π","voracious":"–Ω–µ–Ω–∞—Å—ã—Ç–Ω—ã–π","obese":"—Ç—É—á–Ω—ã–π","don":"–Ω–∞–¥–µ–≤–∞—Ç—å",
    "plucky":"—Å–º–µ–ª—ã–π","cupidity":"–∞–ª—á–Ω–æ—Å—Ç—å","curtail":"—Å–æ–∫—Ä–∞—â–∞—Ç—å","animosity":"–≤—Ä–∞–∂–¥–µ–±–Ω–æ—Å—Ç—å",
    "respite":"–ø–µ—Ä–µ–¥—ã—à–∫–∞","garner":"—Å–æ–±–∏—Ä–∞—Ç—å","annex":"–ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å","arduous":"—Ç—Ä—É–¥–Ω—ã–π",
    "kindle":"—Ä–∞–∑–∂–∏–≥–∞—Ç—å","capacious":"–≤–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π","accolade":"–ø–æ—Ö–≤–∞–ª–∞","assail":"–∞—Ç–∞–∫–æ–≤–∞—Ç—å",
    "doff":"—Å–Ω–∏–º–∞—Ç—å","altercation":"—Å—Å–æ—Ä–∞","disparage":"—É–º–∞–ª—è—Ç—å","petulant":"—Ä–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π",
    "deduce":"–¥–µ–ª–∞—Ç—å–≤—ã–≤–æ–¥","deft":"–ª–æ–≤–∫–∏–π","ostracize":"–∏–∑–≥–æ–Ω—è—Ç—å","ensemble":"–∞–Ω—Å–∞–º–±–ª—å",
    "engulf":"–ø–æ–≥–ª–æ—â–∞—Ç—å","dessicate":"–≤—ã—Å—É—à–∏–≤–∞—Ç—å","denounce":"–æ—Å—É–∂–¥–∞—Ç—å","abstruce":"–Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π",
    "wither":"—É–≤—è–¥–∞—Ç—å","truncate":"—É—Å–µ–∫–∞—Ç—å","wane":"—É–±—ã–≤–∞—Ç—å","somber":"–º—Ä–∞—á–Ω—ã–π","rivet":"–∑–∞–∫–ª–µ–ø–∫–∞",
    "sundry":"—Ä–∞–∑–Ω—ã–π","prowess":"–º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ","plight":"–±–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–µ","permeate":"–ø—Ä–æ–Ω–∏–∫–∞—Ç—å",
    "precarious":"–Ω–µ–Ω–∞–¥–µ–∂–Ω—ã–π","revere":"–ø–æ—á–∏—Ç–∞—Ç—å","forsake":"–ø–æ–∫–∏–¥–∞—Ç—å","to curb":"—Å–¥–µ—Ä–∂–∏–≤–∞—Ç—å",
    "rife":"–∏–∑–æ–±–∏–ª—É—é—â–∏–π","chastise":"—Å—É—Ä–æ–≤–æ–∫—Ä–∏—á–∞—Ç—å","tantalize":"–¥—Ä–∞–∑–Ω–∏—Ç—å","surmise":"–¥–æ–≥–∞–¥–∫–∞",
    "disperse":"—Ä–∞—Å—Å–µ–∏–≤–∞—Ç—å","evince":"–ø—Ä–æ—è–≤–ª—è—Ç—å"
}

def init_state():
    if 'word_index' not in st.session_state:
        st.session_state.word_index = 0
    if 'score' not in st.session_state:
        st.session_state.score = 0
    if 'prev_feedback' not in st.session_state:
        st.session_state.prev_feedback = ""
    if 'quiz_ended' not in st.session_state:
        st.session_state.quiz_ended = False

def make_question():
    word = words[st.session_state.word_index]
    correct = ru_correct[word]
    all_translations = list(ru_correct.values())
    wrongs = [t for t in all_translations if t != correct][:3]
    options = wrongs + [correct]
    options = sorted(options)
    return word, correct, options

def handle_answer(selected, correct):
    if selected == correct:
        st.session_state.score += 1
        st.session_state.prev_feedback = ""
    elif selected == "–ù–µ –∑–Ω–∞—é":
        st.session_state.prev_feedback = f"‚Ü©Ô∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–ª–æ–≤–æ ¬´{words[st.session_state.word_index]}¬ª –∑–Ω–∞—á–∏—Ç: ¬´{correct}¬ª."
    else:
        st.session_state.prev_feedback = f"‚úò –ü—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–ª–æ–≤–æ ¬´{words[st.session_state.word_index]}¬ª ‚Äî –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ¬´{correct}¬ª."

    st.session_state.word_index += 1
    if st.session_state.word_index >= len(words):
        st.session_state.quiz_ended = True

# ==== Streamlit App ====
st.set_page_config(page_title="–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –ø–æ —Å–ª–æ–≤–∞–º", layout="centered")
st.title("üá∑üá∫ –ê–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π —Ç–µ—Å—Ç")

init_state()

# Manual end
if st.button("‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç"):
    st.session_state.quiz_ended = True

# End screen
if st.session_state.quiz_ended:
    st.success("üìù –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")
    st.write(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: **{st.session_state.score}** –∏–∑ **{len(words)}**")
    if st.button("üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ"):
        for key in list(st.session_state.keys()):
            del st.session_state[key]
        st.experimental_rerun()
    st.stop()

# Show feedback from previous question
if st.session_state.prev_feedback:
    st.info(st.session_state.prev_feedback)

# Show current question
word, correct, options = make_question()
st.markdown(f"**–í–æ–ø—Ä–æ—Å {st.session_state.word_index + 1} –∏–∑ {len(words)}**")
st.write(f"–ß—Ç–æ –∑–Ω–∞—á–∏—Ç ¬´**{word}**¬ª?")

cols = st.columns(2)
for i, opt in enumerate(options + ["–ù–µ –∑–Ω–∞—é"]):
    if cols[i % 2].button(opt, key=f"btn_{st.session_state.word_index}_{i}"):
        handle_answer(opt, correct)
